Scraping plans:

1. Refresh overall data (tags, categories, full games list)
2. Fix up gaps (deleted games/tags/categories) -> probably won't delete tags unless I /really/ have to
3. Download fresh data for new games
4. Refresh some number of old games


Data that I need:
- List of all games
https://api.steampowered.com/ISteamApps/GetAppList/v2/

- Description
- Genres
- Price (ideally in all currencies, and then some JS magic)
- Platforms
- Categories
- Tags
- Promo photos & videos
All of this comes from bin/html5/bin/data/v2/app_details/${gameId}.txt, which I think is a direct download using this API:
https://store.steampowered.com/api/appdetails?appids=438640&cc=tw
Note that this API does allow multiple appids at once. Do that. (Apparently this doesn't work anymore. Test?)
Rate limit says 200 requests per 5 minutes.
Supports some kinds of filtering, look here:
https://github.com/Revadike/InternalSteamWebAPI/wiki/Get-App-Details

- Review counts for each game
Available through API too, although it took some figuring.
filter=summary -- Reduced response size (no data impact)
language=all -- filters to include all reviewer languages (otherwise only counts english reviews)
purchase_type=all -- Also includes people who got the game for free, if it's a F2P game (like TF2). 
https://store.steampowered.com/appreviews/440?json=1&filter=summary&language=all&purchase_type=all

This also comes with "review_score_desc": "Very Positive" so I can stop manually computing that too.

- List of all tags
https://store.steampowered.com/actions/ajaxgetstoretags

- Categorization of all tags
https://steamcommunity.com/sale/ajaxgetcategoriesbytag

- 'Hidden gem' scores for each game
??? What is the alg here, idk.

- 'Similar games' for each game
Might need scraping here too. Not sure.
